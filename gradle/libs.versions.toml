[versions]

kotlin = "1.9.21"
compose = "1.6.0"
agp = "8.2.0"
androidx-appcompat = "1.6.1"
androidx-activityCompose = "1.8.2"
compose-uitooling = "1.6.2"
voyager = "1.0.0"
composeImageLoader = "1.7.1"
buildConfig = "5.3.5"
kotlinx-coroutines = "1.7.3"
moko-mvvm = "0.16.1"
ktor = "2.3.7"
kotlinx-serialization = "1.6.2"
koin = "3.5.3"
koin-compose = "1.1.2"
sqlDelight = "2.0.1"
kotest = "5.8"
kotestPlugin = "5.8.0"
composeCompiler = "1.5.8"
tocuhlab = "2.0.6"
# skydoves
sandwich = "2.0.5"

[libraries]

androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
androidx-activityCompose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
compose-uitooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose-uitooling" }
compose-ui = {module = "androidx.compose.ui:ui",version.ref = "compose"}

## navigation ##
voyager-navigator = { module = "cafe.adriel.voyager:voyager-navigator", version.ref = "voyager" }
voyager-screenModel = {module="cafe.adriel.voyager:voyager-screenmodel", version.ref="voyager"}
voyager-koin = { module = "cafe.adriel.voyager:voyager-koin", version.ref = "voyager" }

## imageLoader ##
composeImageLoader = { module = "io.github.qdsfdhvh:image-loader", version.ref = "composeImageLoader" }

## coroutine ##
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }

## moko ##
moko-mvvm = { module = "dev.icerock.moko:mvvm-compose", version.ref = "moko-mvvm" }

## ktor ##
ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }

## kotlinx-serilization ##
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }

## koin ##
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin-compose" }

## sqlDelight ##
sqlDelight-driver-sqlite = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqlDelight" }
sqlDelight-driver-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqlDelight" }
sqlDelight-driver-native = { module = "app.cash.sqldelight:native-driver", version.ref = "sqlDelight" }
sqlDelight-driver-js = { module = "app.cash.sqldelight:web-worker-driver", version.ref = "sqlDelight" }

# kotlin test
kotlin-test = { group = "org.jetbrains.kotlin", name = "kotlin-test", version.ref = "kotlin" }

# Skydoves
skydoves-sandwich = { group = "com.github.skydoves", name = "sandwich-ktor", version.ref = "sandwich" }

# touchlab
touchlab-concurrency = { group = "co.touchlab", name = "stately-concurrency", version.ref = "tocuhlab" }
touchlab-strict = { group = "co.touchlab", name = "stately-strict", version.ref = "tocuhlab" }
touchlab-common = { group = "co.touchlab", name = "stately-common", version.ref = "tocuhlab" }

## plugins
android-gradlePlugin = { group = "com.android.tools.build", name = "gradle", version.ref = "agp" }
kotlin-gradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
compose-gradlePlugin = {module = "org.jetbrains.compose:compose-gradle-plugin",version.ref="compose"}

[plugins]

multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
compose = { id = "org.jetbrains.compose", version.ref = "compose" }
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
buildConfig = { id = "com.github.gmazzo.buildconfig", version.ref = "buildConfig" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
sqlDelight = { id = "app.cash.sqldelight", version.ref = "sqlDelight" }
kotest = { id = "io.kotest.multiplatform", version.ref = "kotestPlugin" }
